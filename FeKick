local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v69=0;local v70;while true do if (v69==0) then v70=v2(v0(v30,16));if v19 then local v97=v5(v70,v19);v19=nil;return v97;else return v70;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v71=(v31/((5 -3)^(v32-(2 -(1 -0)))))%((3 -1)^(((v33-(2 -1)) -(v32-((1685 -(68 + 997)) -(555 + 64)))) + (932 -(857 + 74)))) ;return v71-(v71%(569 -(367 + (1471 -(226 + 1044))))) ;else local v72=927 -((931 -717) + 713) ;local v73;while true do if (v72==(0 + 0)) then v73=(1 + (118 -(32 + 85)))^(v32-(878 -(282 + 595))) ;return (((v31%(v73 + v73))>=v73) and (1638 -(1523 + 114))) or (0 + 0 + 0) ;end end end end local function v21()local v34=0 + 0 ;local v35;while true do if (v34==(958 -(892 + 65))) then return v35;end if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + ((351 -(87 + 263)) -0) ;v34=1 -0 ;end end end local function v22()local v36,v37=v1(v16,v18,v18 + (182 -(67 + 113)) );v18=v18 + 2 ;return (v37 * (188 + 68)) + v36 ;end local function v23()local v38,v39,v40,v41=v1(v16,v18,v18 + (7 -4) );v18=v18 + 3 + 1 ;return (v41 * (66680831 -(134357413 -84453798))) + (v40 * 65536) + (v39 * (1208 -(802 + 150))) + v38 ;end local function v24()local v42=(0 + 0) -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(0 + 0)) then v43=v23();v44=v23();v42=773 -(201 + 571) ;end if (v42==(3 + 0)) then if (v47==(997 -(915 + 82))) then if (v46==(0 -0)) then return v48 * (0 + 0) ;else local v98=0 -0 ;while true do if (v98==(1187 -(1069 + 118))) then v47=2 -1 ;v45=0 -0 ;break;end end end elseif (v47==(280 + 76 + 1691)) then return ((v46==(0 + 0)) and (v48 * ((1 + 0)/(0 -(1055 -(87 + 968)))))) or (v48 * NaN) ;end return v8(v48,v47-(1015 + 8) ) * (v45 + (v46/((793 -(368 + 423))^52))) ;end if (v42==(6 -4)) then v47=v20(v44,39 -(10 + 8) ,1454 -(630 + 793) );v48=((v20(v44,108 -76 )==(4 -(13 -10))) and  -((3 + 0) -2)) or (443 -((940 -524) + 26)) ;v42=3;end if (v42==(3 -2)) then v45=1 + 0 ;v46=(v20(v44,1 -0 ,458 -((1558 -(447 + 966)) + 293) ) * ((432 -(44 + 386))^(87 -55))) + v43 ;v42=(4073 -2585) -(998 + 488) ;end end end local function v25(v49)local v50;if  not v49 then local v74=1817 -(1703 + 114) ;while true do if (v74==(701 -(108 + 268 + 325))) then v49=v23();if (v49==0) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(1 -(0 -0)) );v18=v18 + v49 ;local v51={};for v67=2 -1 , #v50 do v51[v67]=v2(v1(v3(v50,v67,v67)));end return v6(v51);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v52=1202 -(373 + 829) ;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if ((1467 -(899 + 568))==v52) then v53=731 -(476 + 255) ;v54=nil;v52=1;end if ((1131 -(369 + 761))~=v52) then else v55=nil;v56=nil;v52=2 + 0 ;end if ((2 + 1)==v52) then v59=nil;while true do local v79=0 -0 ;while true do if ((0 -0)~=v79) then else if (v53~=(240 -(64 + 174))) then else for v107=604 -(268 + 335) ,v58 do local v108=0 + 0 ;local v109;local v110;local v111;local v112;local v113;while true do if (v108~=(292 -(60 + 230))) then else v113=nil;while true do if (v109==1) then local v124=0 -0 ;while true do if (v124~=(573 -(426 + 146))) then else v109=2;break;end if (v124~=(0 + 0)) then else v112=nil;v113=nil;v124=1;end end end if (v109~=(1458 -(282 + 1174))) then else while true do if (v110~=(812 -(569 + 242))) then else v113=nil;while true do if (v111==0) then local v240=0 + 0 ;local v241;while true do if (v240~=0) then else v241=0 + 0 ;while true do if (v241==(0 -0)) then local v252=0 + 0 ;while true do if (1==v252) then v241=2 -1 ;break;end if (v252~=(0 + 0)) then else v112=v21();v113=nil;v252=1025 -(706 + 318) ;end end end if (v241==(1252 -(721 + 530))) then v111=1;break;end end break;end end end if ((1976 -(1913 + 62))~=v111) then else if (v112==(1 + 0)) then v113=v21()~=0 ;elseif (v112==(5 -3)) then v113=v24();elseif (v112~=(1936 -(565 + 1368))) then else v113=v25();end v59[v107]=v113;break;end end break;end if (v110==(1271 -(945 + 326))) then local v217=0 -0 ;while true do if (v217~=(0 + 0)) then else v111=700 -(271 + 429) ;v112=nil;v217=1662 -(1477 + 184) ;end if (v217~=1) then else v110=1;break;end end end end break;end if (v109==(0 + 0)) then v110=0 -0 ;v111=nil;v109=1;end end break;end if (v108==(1501 -(1408 + 92))) then v111=nil;v112=nil;v108=858 -(564 + 292) ;end if (v108~=0) then else v109=0 -0 ;v110=nil;v108=1;end end end v57[3]=v21();for v114=1,v23() do local v115=0;local v116;local v117;while true do if (v115~=(1086 -(461 + 625))) then else v116=304 -(244 + 60) ;v117=nil;v115=1289 -(993 + 295) ;end if (v115==(1 + 0)) then while true do if ((0 + 0)==v116) then v117=v21();if (v20(v117,1172 -(418 + 753) ,1 + 0 )==(476 -(41 + 435))) then local v201=0 + 0 ;local v202;local v203;local v204;local v205;local v206;while true do if (v201==(1 + 1)) then v206=nil;while true do if (v202==(1 + 1)) then while true do if (v203~=2) then else local v244=0 + 0 ;local v245;while true do if (v244==0) then v245=1125 -(936 + 189) ;while true do if (v245~=(530 -(406 + 123))) then else v203=1772 -(1749 + 20) ;break;end if (v245~=(0 + 0)) then else if (v20(v205,1614 -(1565 + 48) ,1323 -(1249 + 73) )~=1) then else v206[1 + 1 ]=v59[v206[1147 -(466 + 679) ]];end if (v20(v205,4 -2 ,269 -(176 + 91) )==1) then v206[3]=v59[v206[8 -5 ]];end v245=1;end end break;end end end if (v203==0) then local v246=0;local v247;local v248;while true do if (v246==(1901 -(106 + 1794))) then while true do if (v247~=(0 + 0)) then else v248=1092 -(975 + 117) ;while true do if (v248==(0 + 0)) then local v262=0 -0 ;local v263;while true do if (v262~=(0 -0)) then else v263=114 -(4 + 110) ;while true do if (v263==(584 -(57 + 527))) then local v269=1427 -(41 + 1386) ;while true do if (v269==0) then v204=v20(v117,105 -(17 + 86) ,7 -4 );v205=v20(v117,4,5 + 1 );v269=1 -0 ;end if (v269==(2 -1)) then v263=2 -1 ;break;end end end if (v263~=(167 -(122 + 44))) then else v248=1;break;end end break;end end end if (v248~=(1 -0)) then else v203=2 -1 ;break;end end break;end end break;end if (0~=v246) then else v247=0;v248=nil;v246=1;end end end if (3~=v203) then else if (v20(v205,9 -6 ,3 + 0 )==(1 + 0)) then v206[4]=v59[v206[4]];end v54[v114]=v206;break;end if (v203~=(1 -0)) then else local v250=0;local v251;while true do if (v250==0) then v251=65 -(30 + 35) ;while true do if (v251==(1190 -(449 + 740))) then v203=2 + 0 ;break;end if ((1257 -(1043 + 214))~=v251) then else v206={v22(),v22(),nil,nil};if (v204==(0 + 0)) then local v259=0 -0 ;local v260;local v261;while true do if (v259~=(581 -(361 + 219))) then else while true do if (v260==(0 -0)) then v261=320 -(53 + 267) ;while true do if (v261==(0 -0)) then v206[3]=v22();v206[1 + 3 ]=v22();break;end end break;end end break;end if (v259==(1205 -(902 + 303))) then local v265=0;while true do if (v265==1) then v259=414 -(15 + 398) ;break;end if (v265==(0 -0)) then v260=982 -(18 + 964) ;v261=nil;v265=3 -2 ;end end end end elseif (v204==(1 + 0)) then v206[1 + 2 ]=v23();elseif (v204==2) then v206[2 + 1 ]=v23() -((216 -(22 + 192))^16) ;elseif (v204~=(853 -(20 + 830))) then else local v267=0 + 0 ;local v268;while true do if (v267~=0) then else v268=126 -(116 + 10) ;while true do if (v268~=(0 + 0)) then else v206[741 -(542 + 196) ]=v23() -((3 -1)^(5 + 11)) ;v206[3 + 1 ]=v22();break;end end break;end end end v251=1 + 0 ;end end break;end end end end break;end if (v202==(2 -1)) then v205=nil;v206=nil;v202=4 -2 ;end if (v202==0) then local v243=1551 -(1126 + 425) ;while true do if (v243==0) then v203=405 -(118 + 287) ;v204=nil;v243=3 -2 ;end if (v243==(1122 -(118 + 1003))) then v202=2 -1 ;break;end end end end break;end if ((378 -(142 + 235))==v201) then v204=nil;v205=nil;v201=9 -7 ;end if (0==v201) then v202=0 + 0 ;v203=nil;v201=2 -1 ;end end end break;end end break;end end end v53=3;end if (v53~=(1 + 0)) then else local v104=977 -(553 + 424) ;local v105;while true do if (v104~=(0 -0)) then else v105=0;while true do if ((0 + 0)==v105) then v57={v54,v55,nil,v56};v58=v23();v105=1 + 0 ;end if (v105==1) then v59={};v53=2 + 0 ;break;end end break;end end end v79=2 -1 ;end if ((1 -0)==v79) then if ((0 + 0)==v53) then local v106=0 -0 ;while true do if (1==v106) then v56={};v53=2 -1 ;break;end if (0==v106) then v54={};v55={};v106=1 + 0 ;end end end if (v53==(14 -11)) then for v118=754 -(239 + 514) ,v23() do v55[v118-(1 + 0) ]=v28();end return v57;end break;end end end break;end if (v52~=(1331 -(797 + 532))) then else local v75=0 + 0 ;while true do if (v75~=(0 + 0)) then else v57=nil;v58=nil;v75=766 -(574 + 191) ;end if (v75~=(1 + 0)) then else v52=6 -3 ;break;end end end end end local function v29(v60,v61,v62)local v63=0;local v64;local v65;local v66;while true do if (v63==0) then v64=v60[1];v65=v60[2];v63=1;end if (v63==1) then v66=v60[3];return function(...)local v80=v64;local v81=v65;local v82=v66;local v83=v27;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v12("#",...) -1 ;local v89={};local v90={};for v94=0,v88 do if (v94>=v82) then v86[v94-v82 ]=v87[v94 + 1 ];else v90[v94]=v87[v94 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do v92=v80[v84];v93=v92[1];if (v93<=29) then if (v93<=14) then if (v93<=6) then if (v93<=2) then if (v93<=0) then if (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93>1) then v90[v92[2]]=v90[v92[3]][v90[v92[4]]];else local v130=0;local v131;local v132;while true do if (v130==1) then v90[v131 + 1 ]=v132;v90[v131]=v132[v92[4]];break;end if (v130==0) then v131=v92[2];v132=v90[v92[3]];v130=1;end end end elseif (v93<=4) then if (v93>3) then v84=v92[3];else local v134=v92[2];local v135=v90[v134];for v207=v134 + 1 ,v85 do v7(v135,v90[v207]);end end elseif (v93>5) then v90[v92[2]]=v90[v92[3]] * v92[4] ;else v90[v92[2]]=v92[3];end elseif (v93<=10) then if (v93<=8) then if (v93==7) then v90[v92[2]]=v92[3]~=0 ;else local v140=0;local v141;while true do if (v140==0) then v141=v92[2];v90[v141]=v90[v141]();break;end end end elseif (v93>9) then v90[v92[2]]=v92[3]~=0 ;else v90[v92[2]][v92[3]]=v90[v92[4]];end elseif (v93<=12) then if (v93==11) then local v145=v92[2];v90[v145](v90[v145 + 1 ]);else v62[v92[3]]=v90[v92[2]];end elseif (v93==13) then v90[v92[2]]=v29(v81[v92[3]],nil,v62);else local v149=v92[2];v90[v149](v90[v149 + 1 ]);end elseif (v93<=21) then if (v93<=17) then if (v93<=15) then local v120=v92[2];v90[v120]=v90[v120](v90[v120 + 1 ]);elseif (v93>16) then local v150=0;local v151;local v152;while true do if (v150==1) then v90[v151 + 1 ]=v152;v90[v151]=v152[v92[4]];break;end if (v150==0) then v151=v92[2];v152=v90[v92[3]];v150=1;end end elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=19) then if (v93>18) then v90[v92[2]]=v90[v92[3]];else local v155=v92[2];v90[v155](v13(v90,v155 + 1 ,v92[3]));end elseif (v93>20) then for v208=v92[2],v92[3] do v90[v208]=nil;end else v90[v92[2]][v92[3]]=v90[v92[4]];end elseif (v93<=25) then if (v93<=23) then if (v93>22) then do return;end else local v158=v92[2];do return v90[v158](v13(v90,v158 + 1 ,v85));end end elseif (v93==24) then v90[v92[2]]=v90[v92[3]][v92[4]];elseif (v90[v92[2]]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=27) then if (v93>26) then local v161=0;local v162;while true do if (v161==0) then v162=v92[2];do return v13(v90,v162,v85);end break;end end elseif (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==28) then v90[v92[2]]=v90[v92[3]];else v90[v92[2]]=v90[v92[3]] + v90[v92[4]] ;end elseif (v93<=44) then if (v93<=36) then if (v93<=32) then if (v93<=30) then for v125=v92[2],v92[3] do v90[v125]=nil;end elseif (v93>31) then local v166=v92[2];do return v90[v166](v13(v90,v166 + 1 ,v85));end else local v167=v92[2];local v168=v90[v167];for v210=v167 + 1 ,v85 do v7(v168,v90[v210]);end end elseif (v93<=34) then if (v93>33) then v90[v92[2]]=v90[v92[3]] * v92[4] ;else local v170=v92[2];v90[v170]=v90[v170](v90[v170 + 1 ]);end elseif (v93==35) then v90[v92[2]]=v90[v92[3]] + v90[v92[4]] ;else v62[v92[3]]=v90[v92[2]];end elseif (v93<=40) then if (v93<=38) then if (v93==37) then v84=v92[3];else local v176=v92[2];v85=(v176 + v91) -1 ;for v211=v176,v85 do local v212=v86[v211-v176 ];v90[v211]=v212;end end elseif (v93==39) then local v177=0;local v178;while true do if (v177==0) then v178=v92[2];v90[v178]=v90[v178](v13(v90,v178 + 1 ,v92[3]));break;end end else v90[v92[2]]={};end elseif (v93<=42) then if (v93==41) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end else local v180=v92[2];v90[v180]=v90[v180](v13(v90,v180 + 1 ,v92[3]));end elseif (v93==43) then v90[v92[2]]=v29(v81[v92[3]],nil,v62);else v90[v92[2]]=v92[3];end elseif (v93<=51) then if (v93<=47) then if (v93<=45) then v90[v92[2]][v92[3]]=v92[4];elseif (v93>46) then v90[v92[2]]=v62[v92[3]];else local v187=v92[2];do return v13(v90,v187,v85);end end elseif (v93<=49) then if (v93==48) then if (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]]=v62[v92[3]];end elseif (v93>50) then v90[v92[2]]=v90[v92[3]][v90[v92[4]]];else v90[v92[2]]=v90[v92[3]][v92[4]];end elseif (v93<=55) then if (v93<=53) then if (v93==52) then v90[v92[2]][v92[3]]=v92[4];elseif (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==54) then v90[v92[2]]={};else local v197=v92[2];v90[v197]=v90[v197]();end elseif (v93<=57) then if (v93==56) then local v199=v92[2];v90[v199](v13(v90,v199 + 1 ,v92[3]));else do return;end end elseif (v93==58) then local v200=v92[2];v85=(v200 + v91) -1 ;for v214=v200,v85 do local v215=v86[v214-v200 ];v90[v214]=v215;end elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end v84=v84 + 1 ;end end;end end end return v29(v28(),{},v17)(...);end vv9(),...);
