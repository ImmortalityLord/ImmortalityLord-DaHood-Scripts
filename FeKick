--REAL.
 
                                                                                local v0=tonumber;     
                                                                        local v1=string.byte;local v2=string.char;local  
                                                                     v3=string.sub;local v4=string.gsub;local v5=string.rep;local  
                                                                 v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=     
                                                            getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;  
                                                          local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local        
                                                        function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local     
                                                      v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do    
                                                    if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if   
                                                  (v18==1) then v21=nil;function v21(v31,v32,v33)if v33 then local v83=0 -(1637 -(1523 + 114)) ;     
                                                  local v84;while true do if ((0 -0)==v83) then v84=(v31/((3 -1)^(v32-(1 + 0))))%((4 -(2 -0))^(((v33-  
                                                (1066 -(68 + 997))) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v84-(v84%1) ;end end else    
                                                local v85=568 -(367 + 201) ;local v86;while true do if (v85==(927 -(214 + 713))) then v86=2^(v32-(1 + 0))  
                                               ;return (((v31%(v86 + v86))>=v86) and (1 + 0)) or (877 -((1552 -(226 + 1044)) + 595)) ;end end end end v22=   
                                              nil;v18=2;end if (v18==3) then v24=nil;function v24()local v34=(180 -(67 + 113)) -0 ;local v35;local v36;      
                                            local v37;local v38;while true do if (v34==(117 -(32 + 63 + 22))) then v35,v36,v37,v38=v1(v16,v19,v19 + (7 -4) +   
                                            0 );v19=v19 + 1 + 3 ;v34=958 -(657 + 235 + 65) ;end if (v34==(2 -1)) then return (v38 * (31011612 -14234396)) + (    
                                          v37 * (120312 -54776)) + (v36 * (606 -(87 + 263))) + v35 ;end end end v25=nil;v18=4;end if (v18==6) then v29=nil;        
                                          function v29()local v39=0 -0 ;local v40;local v41;local v42;local v43;local v44;local v45;local v46;while true do if (v39  
                                          ==1) then v42=nil;v43=nil;v39=2 + 0 ;end if (v39~=(1 + 1)) then else local v92=0 -0 ;while true do if (v92~=(1262 -(1091 +   
                                          171))) then else v44=nil;v45=nil;v92=1 + 0 ;end if (v92==(1 + 0)) then v39=1174 -(418 + 753) ;break;end end end if (v39~=3)  
                                         then else v46=nil;while true do local v94=0;local v95;while true do if (v94==(0 + 0)) then v95=0 -0 ;while true do if (v95~=(0  
                                         + 0)) then else local v102=0 + 0 ;while true do if (v102==(0 -0))    --[[==============================]]then if (v40==(375 -(    
                                        123 + 251))) then local v194=1769 -(1749 + 20) ;local v195; --[[============================================]]while true do if (   
                                        v194~=(0 -0)) then else v195=0;while true do if (v195~= --[[======================================================]](0 + 0)) then    
                                      else v44={v41,v42,nil,v43};v45=v24();v195=1 + 0 ;end  --[[==========================================================]]if (v195==(1146 -  
                                      (466 + 679))) then v46={};v40=2;break;end end break --[[==============================================================]];end end end if  
                                       (v40==(0 -0)) then local v196=0 + 0 ;while true do --[[================================================================]] if (v196==(0 +  
                                       0)) then v41={};v42={};v196=2 -1 ;end if (v196~=(  --[[==================================================================]]837 -(660 +    
                                      176))) then else v43={};v40=1 + 0 ;break;end end    --[[==================================================================]]end v102=203 -(    
                                    14 + 188) ;end if (v102==(2 -1)) then v95=676 -(534 + --[[====================================================================]] 141) ;break;  
                    end end end if (v95==(1 + 0)) then if (v40==(3 + 0)) then local v103= --[[====================================================================]]0 + 0 ;while     
              true do if (v103~=(0 -0)) then else for v209=1 -0 ,v24() do v42[v209-(2 -1) --[[======================================================================]] ]=v29();end   
            return v44;end end end if (v40==(105 -(17 + 86))) then for v107=1 + 0 ,v45 do --[[======================================================================]] local v108=0  
          ;local v109;local v110;local v111;while true do if (v108==(1 + 0)) then v111=   --[[======================================================================]]nil;while      
        true do if (v109~=(396 -(115 + 281))) then else local v233=0 -0 ;local v234;while --[[======================================================================]] true do if (  
        v233~=(0 + 0)) then else v234=0 -0 ;while true do if (v234~=1) then else v109=167 --[[======================================================================]] -(122 + 44)   
      ;break;end if (v234==(0 -0)) then local v237=0 -0 ;while true do if (0==v237) then  --[[======================================================================]]v110=v22();    
      v111=nil;v237=2 -1 ;end if (v237~=(1 + 0)) then else v234=1;break;end end end end     --[[==================================================================]]break;end end    
      end if (v109~=(3 -2)) then else if (v110==(868 -(550 + 317))) then v111=v22()~=(65 -( --[[================================================================]]30 + 35)) ;elseif  
     (v110==(2 + 0)) then v111=v25();elseif (v110==(1260 -(1043 + 214))) then v111=v26();   --[[==============================================================]]end v46[v107]=     
    v111;break;end end break;end if (v108~=(0 -0)) then else v109=0 -0 ;v110=nil;v108=2 -1 ;  --[[==========================================================]]end end end v44[288  
     -(134 + 151) ]=v22();for v112=1666 -(970 + 695) ,v24() do local v113=0 -0 ;local v114;     --[[====================================================]]while true do if ((1990  
     -(582 + 1408))==v113) then v114=v22();if (v21(v114,2 -1 ,3 -2 )==(320 -(53 + 267))) then     --[[==============================================]]local v227=0 + 0 ;local    
    v228;local v229;local v230;local v231;local v232;while true do if (v227==(414 -(15 + 398))) then  --[[====================================]]v230=nil;v231=nil;v227=2 -0 ;  
    end if (v227==(7 -5)) then v232=nil;while true do if (v228~=(984 -(18 + 964))) then else while true   --[[========================]]do if (v229~=2) then else local v238=  
    1824 -(1195 + 629) ;while true do if (v238==0) then if (v21(v231,1 + 0 ,1 -0 )==1) then v232[243 -(187 + 54) ]=v46[v232[782 -(162 + 618) ]];end if (v21(v231,2,2 + 0 )   
  ~=(1 + 0)) then else v232[3]=v46[v232[6 -3 ]];end v238=1;end if (v238~=(1 -0)) then else v229=3;break;end end end if (v229==(126 -(116 + 10))) then local v239=0 + 0 ;   
  while true do if (v239==1) then v229=1 + 0 ;break;end if (v239~=0) then else v230=v21(v114,2,6 -3 );v231=v21(v114,4,1642 -(1373 + 263) );v239=1001 -(451 + 549) ;end   
  end end if ((1 + 0)==v229) then local v240=0;local v241;while true do if (v240~=(0 + 0)) then else v241=0;while true do if ((0 + 0)==v241) then v232={v23(),v23(),nil,   
  nil};if (v230==(1384 -(746 + 638))) then local v249=0 -0 ;local v250;local v251;while true do if (v249~=(0 + 0)) then else v250=0;v251=nil;v249=1 -0 ;end if ((378 -(    
  142 + 235))~=v249) then else while true do if (v250~=(341 -(218 + 123))) then else v251=0;while true do if (v251==(1581 -(1535 + 46))) then v232[3]=v23();v232[4]=v23()  
  ;break;end end break;end end break;end end elseif (v230==(1 + 0)) then v232[13 -10 ]=v24();elseif (v230==2) then v232[1 + 2 ]=v24() -(2^(3 + 13)) ;elseif (v230~=3)      
  then else local v254=0 -0 ;local v255;local v256;while true do if (v254==(1 + 0)) then while true do if (v255==(560 -(306 + 254))) then v256=0;while true do if (v256~=  
  (0 + 0)) then else v232[3]=v24() -((3 -1)^(1483 -(899 + 568))) ;v232[3 + 1 ]=v23();break;end end break;end end break;end if (v254~=(0 + 0)) then else v255=0 -0 ;v256=   
  nil;v254=604 -(268 + 335) ;end end end v241=291 -(60 + 230) ;end if (v241==1) then v229=5 -3 ;break;end end break;end end end if (v229==3) then if (v21(v231,3,6 -3 )~=  
  (573 -(426 + 146))) then else v232[4]=v46[v232[1 + 3 ]];end v41[v112]=v232;break;end end break;end if (v228~=(0 -0)) then else v229=753 -(239 + 514) ;v230=nil;v228=     
  1457 -(282 + 1174) ;end if (v228==(1330 -(797 + 532))) then local v236=811 -(569 + 242) ;while true do if (v236~=(1 + 0)) then else v228=5 -3 ;break;end if (v236==(0 +  
   0)) then v231=nil;v232=nil;v236=1 + 0 ;end end end end break;end if ((1024 -(706 + 318))~=v227) then else v228=0;v229=nil;v227=1;end end end break;end end end v40=3;end  
   break;end end break;end end end break;end if (v39==(1251 -(721 + 530))) then local v93=1271 -(945 + 326) ;while true do if ((2 -1)==v93) then v39=1 + 0 ;break;end if (   
  v93~=(700 -(271 + 429))) then else v40=0 + 0 ;v41=nil;v93=1 -0 ;end end end end end v30=nil;v18=7;end if (v18==4) then function v25()local v47=v24();local v48=v24();      
  local v49=1 -0 ;local v50=(v21(v48,239 -(64 + 174) ,3 + 17 ) * (((2 -0) -0)^(368 -(144 + 192)))) + v47 ;local v51=v21(v48,237 -(42 + (524 -350)) ,24 + 7 );local v52=((    
  v21(v48,(331 -(244 + 60)) + 4 + 1 )==(1 + (476 -(41 + 435)))) and  -((2506 -(938 + 63)) -(363 + 1141))) or (1581 -(1183 + 397)) ;if (v51==(0 -0)) then if (v50==(0 + 0))   
  then return v52 * (0 + 0) ;else v51=1976 -(1913 + 62) ;v49=0 + 0 ;end elseif (v51==(5418 -3371)) then return ((v50==(1933 -(565 + 1368))) and (v52 * ((3 -2)/((1278 + 383  
  ) -(1477 + 184))))) or (v52 * NaN) ;end return v8(v52,v51-(1393 -370) ) * (v49 + (v50/((2 + 0)^(908 -(564 + 292))))) ;end v26=nil;function v26(v53)local v54;if  not v53   
  then local v87=1613 -(1565 + 48) ;while true do if (v87==(0 + (1138 -(782 + 356)))) then v53=v24();if (v53==0) then return "";end break;end end end v54=v3(v16,v19,(v19 +  
   v53) -(1126 -(936 + (456 -(176 + 91)))) );v19=v19 + v53 ;local v55={};for v67=1 + 0 , #v54 do v55[v67]=v2(v1(v3(v54,v67,v67)));end return v6(v55);end v18=5;end if (v18   
  ==2) then function v22()local v56=0;local v57;while true do if (v56==(2 -(1 + 0))) then return v57;end if ((0 -0)==v56) then v57=v1(v16,v19,v19);v19=v19 + ((3880 -2787)   
  -((3333 -2358) + 117)) ;v56=(2894 -(697 + 321)) -(157 + 1718) ;end end end v23=nil;function v23()local v58,v59=v1(v16,v19,v19 + (5 -3) );v19=v19 + (4 -2) ;return (v59 *   
  (100 + 156)) + v58 ;end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v60)if (v1(v60,2)==79) then v20=v0(v3(v60,1,1));return "";else local v88=  
  v2(v0(v60,16));if v20 then local v96=0;local v97;while true do if (v96==0) then v97=v5(v88,v20);v20=nil;v96=1;end if (v96==1) then return v97;end end else return v88;end  
   end end);v18=1;end if (v18==7) then function v30(v61,v62,v63)local v64=v61[1];local v65=v61[2];local v66=v61[3];return function(...)local v69=v64;local v70=v65;local   
  v71=v66;local v72=v28;local v73=1;local v74= -1;local v75={};local v76={...};local v77=v12("#",...) -1 ;local v78={};local v79={};for v89=0,v77 do if (v89>=v71) then    
  v75[v89-v71 ]=v76[v89 + 1 ];else v79[v89]=v76[v89 + 1 ];end end local v80=(v77-v71) + 1 ;local v81;local v82;while true do v81=v69[v73];v82=v81[1];if (v82<=30) then if  
     (v82<=14) then if (v82<=6) then if (v82<=2) then if (v82<=0) then v79[v81[2]]={};elseif (v82==1) then local v115=v81[2];v79[v115](v79[v115 + 1 ]);else local v116=    
    v81[2];v79[v116]=v79[v116]();end elseif (v82<=4) then if (v82==3) then if (v81[2]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end else v79[v81[2]]=v79[v81[3]][    
    v81[4]];end elseif (v82>5) then v63[v81[3]]=v79[v81[2]];else v79[v81[2]]=v79[v81[3]] * v81[4] ;end elseif (v82<=10) then if (v82<=8) then if (v82==7) then if (v79[    
    v81[2]]==v79[v81[4]]) then v73=v73 + 1 ;else v73=v81[3];end else local v123=v81[2];v79[v123](v13(v79,v123 + 1 ,v81[3]));end elseif (v82>9) then v79[v81[2]]=v79[v81[3  
      ]] + v79[v81[4]] ;else for v197=v81[2],v81[3] do v79[v197]=nil;end end elseif (v82<=12) then if (v82==11) then v79[v81[2]]=v79[v81[3]];else v79[v81[2]][v81[3]]=   
      v79[v81[4]];end elseif (v82>13) then if v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end else v63[v81[3]]=v79[v81[2]];end elseif (v82<=22) then if (v82<=18)      
      then if (v82<=16) then if (v82==15) then if (v79[v81[2]]==v81[4]) then v73=v73 + 1 ;else v73=v81[3];end else local v131=v81[2];do return v13(v79,v131,v74);end     
        end elseif (v82>17) then v79[v81[2]]=v79[v81[3]];else local v134=v81[2];v79[v134]=v79[v134](v79[v134 + 1 ]);end elseif (v82<=20) then if (v82==19) then v79[v81  
        [2]]=v79[v81[3]][v79[v81[4]]];else v79[v81[2]]=v30(v70[v81[3]],nil,v63);end elseif (v82==21) then local v139=0;local v140;while true do if (v139==0) then v140=  
        v81[2];v79[v140]=v79[v140](v13(v79,v140 + 1 ,v81[3]));break;end end else v79[v81[2]][v81[3]]=v79[v81[4]];end elseif (v82<=26) then if (v82<=24) then if (v82==   
          23) then local v143=0;local v144;local v145;while true do if (v143==1) then v79[v144 + 1 ]=v145;v79[v144]=v145[v81[4]];break;end if (v143==0) then v144=v81  
            [2];v145=v79[v81[3]];v143=1;end end else do return;end end elseif (v82==25) then v79[v81[2]]=v79[v81[3]] -v79[v81[4]] ;else local v147=v81[2];v79[v147]=   
              v79[v147](v79[v147 + 1 ]);end elseif (v82<=28) then if (v82==27) then local v149=0;local v150;while true do if (v149==0) then v150=v81[2];v79[v150](v79  
                [v150 + 1 ]);break;end end else v79[v81[2]]=v81[3];end elseif (v82==29) then local v153=v81[2];do return v79[v153](v13(v79,v153 + 1 ,v74));end elseif  
                   v79[v81[2]] then v73=v73 + 1 ;else v73=v81[3];end elseif (v82<=45) then if (v82<=37) then if (v82<=33) then if (v82<=31) then v79[v81[2]]=v79[    
                      v81[3]] + v79[v81[4]] ;elseif (v82==32) then for v199=v81[2],v81[3] do v79[v199]=nil;end else do return;end end elseif (v82<=35) then if (v82  
                                  ==34) then v79[v81[2]]=v79[v81[3]][v81[4]];else local v156=v81[2];v74=(v156 + v80) -1 ;for v201=v156,v74 do local v202=v75[v201-   
                                      v156 ];v79[v201]=v202;end end elseif (v82>36) then v79[v81[2]]=v81[3]~=0 ;else v79[v81[2]]={};end elseif (v82<=41) then if (   
                                      v82<=39) then if (v82>38) then v79[v81[2]][v81[3]]=v81[4];            else local v161=v81[2];v79[v161]=v79[v161]();end elseif  
                                       (v82==40) then local v163=v81[2];v79[v163](v13(v79,v163 + 1          ,v81[3]));elseif (v79[v81[2]]==v81[4]) then v73=v73 +  
                                       1 ;else v73=v81[3];end elseif (v82<=43) then if (v82>42)             then local v164=v81[2];do return v79[v164](v13(v79,    
                                      v164 + 1 ,v74));end elseif (v81[2]==v79[v81[4]]) then v73=v73          + 1 ;else v73=v81[3];end elseif (v82==44) then v79[   
                                      v81[2]][v81[3]]=v81[4];else v73=v81[3];end elseif (v82<=53)             then if (v82<=49) then if (v82<=47) then if (v82>46  
                                      ) then v79[v81[2]]=v79[v81[3]] * v81[4] ;else v73=v81[3];end            elseif (v82>48) then local v170=v81[2];v74=(v170 +   
                                      v80) -1 ;for v204=v170,v74 do local v205=v75[v204-v170 ];v79[           v204]=v205;end else v79[v81[2]]=v79[v81[3]][v79[   
                                        v81[4]]];end elseif (v82<=51) then if (v82>50) then v79[v81           [2]]=v81[3];else v79[v81[2]]=v63[v81[3]];end       
                                        elseif (v82==52) then v79[v81[2]]=v79[v81[3]] -v79[v81[4]]              ;else local v178=v81[2];local v179=v79[v81[3]];  
                                        v79[v178 + 1 ]=v179;v79[v178]=v179[v81[4]];end elseif (v82              <=57) then if (v82<=55) then if (v82==54)      
                                        then if (v79[v81[2]]==v79[v81[4]]) then v73=v73 + 1 ;else                v73=v81[3];end else v79[v81[2]]=v63[v81[3]];  
                                        end elseif (v82>56) then local v185=v81[2];local v186=v79                 [v185];for v207=v185 + 1 ,v74 do v7(v186,  
                                        v79[v207]);end else local v187=v81[2];local v188=v79[v187                 ];for v208=v187 + 1 ,v74 do v7(v188,v79[   
                                          v208]);end end elseif (v82<=59) then if (v82>58) then                     v79[v81[2]]=v81[3]~=0 ;else local      
                                          v190=v81[2];do return v13(v79,v190,v74);end end                             elseif (v82==60) then local      
                                            v191=v81[2];v79[v191]=v79[v191](v13(v79,v191 + 1 ,                          v81[3]));else v79[v81[2]]  
                                            =v30(v70[v81[3]],nil,v63);end v73=v73 + 1 ;end                                    end;end      
                                              return v30(v29(),{},v17)(...);end end end v15  
                                                (                                          
                                                                                         
                                                                                   


--------------------------------------------------------------------------------
"LOL!",v9(),...);
